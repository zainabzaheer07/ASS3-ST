name: zainab

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: zainab77
          MYSQL_DATABASE: softwaretesting
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Step 3: Wait for MySQL to be ready
      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -pzainab77 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      # Step 4: Set up MySQL schema and data
      - name: Set up MySQL schema and data
        run: |
          mysql -h 127.0.0.1 -uroot -pzainab77 <<EOF
          CREATE DATABASE IF NOT EXISTS softwaretesting;
          USE softwaretesting;
          CREATE TABLE IF NOT EXISTS user (
              userId INT PRIMARY KEY AUTO_INCREMENT,
              Name VARCHAR(100),
              Email VARCHAR(100) UNIQUE,
              Password VARCHAR(255)
          );
          INSERT INTO user (Name, Email, Password) VALUES
          ('John Doe', 'johndoe@example.com', 'password123'),
          ('Jane Smith', 'janesmith@example.com', 'password456'),
          ('Mike Johnson', 'mikejohnson@example.com', 'password789'),
          ('Alice Brown', 'alicebrown@example.com', 'password101'),
          ('Tom Clark', 'tomclark@example.com', 'password202');
          EOF

      # Step 5: Download Dependencies
      - name: Download Dependencies
        run: |
          mkdir -p lib
          curl -L -o lib/junit-4.13.2.jar https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar
          curl -L -o lib/hamcrest-core-1.3.jar https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
          curl -L -o lib/mysql-connector-j-8.0.30.jar https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.30/mysql-connector-java-8.0.30.jar

      # Step 6: Compile Java Code
      - name: Compile Java Code
        run: |
          mkdir -p out  
          javac -d out -cp ".:lib/*" \
            "Assignment 2/src/main/java/main/LoginService.java" \
            "Assignment 2/src/main/java/main/LoginApp.java" \
            "Assignment 2/src/test/java/test/LoginAppTest.java"

      # Step 7: Run Unit Tests
      - name: Run Unit Tests
        run: |
          java -Djava.awt.headless=true -cp "out:lib/*" org.junit.runner.JUnitCore test.LoginAppTest
